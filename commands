https://www.freecodecamp.org/news/vim-editor-modes-explained/

git --version
vim --version

## VIMRC
<leader> = ,
NNOREMAP => remaps one key combinator to another
NNOREMAP<C-J> <C-W><C-J> => I hit <C-J> do <C-W><C-J>

MAP is recursive
NOREMAP is not recursive
La N inicial es para el mode "Normal",  sin letras aplica para todos los modos, "Normal", "Visual", "Select" and "Operator"


## Movimientos

h move one character left
j move one row down
k move one row up
l move one character right

4j move 4 rows down
6k move 6 rows up

## Basic word movements

w move to beginning of next word
b move to previous beginning of word
e move to end of word
W move to beginning of next word after a whitespace
B move to beginning of previous word before a whitespace
E move to end of word before a whitespace

## Beginning/End of line movement:

0 move to the beginning of the line
$ move to the end of the line


to replace a single character, move your cursor over it and press r, and then the character you want to replace it with. 
you can delete single characters by moving your cursor over it and pressing x.
To perform an undo, press u in normal mode. This undoes changes up to the last time you were in normal mode
If you want to redo (i.e., undo your undo) press Ctrl+r in normal mode.


## Insert Mode

i for ’insert’, this immediately switches vim to insert mode
a for ’append’, this moves the cursor after the current character and enters insert mode
o inserts a new line below the current line and enters insert mode on the new line

I moves the cursor to the beginning of the line and enters insert mode
A moves the cursor to the end of the line and enters insert mode
O inserts a new line above the current one and enters insert mode on the new line

CTRL + P => Select last word from list <C-P>

### Navigation

/ + word + enter => para buscar una palabra => N y CTRL-N
CTRL-U y CTRL-D => para mover a hacia arriba o hacia abajo
gg => al principio, shift + g => al final
ww => navega entre palabras

### Operaciones
:w nombre.py => grabar con nombre
:q => salir
:q! => Salir sin guardar
:e $MYVIMRC => Archivo de configuracion
:wq => Guardar y salir
:! ls => Comandos de linux

### Set Working direction
Para crear un nuevo archivo en :Vex, se debe apretar %
Para crear un nuevo directorio en :Vex, se debe apretar d
:term => para abrir el terminal




#### Copy and Cut
dd => cut the current line, including the newline character at the end of the line
x => cut
d => delete
i => insert
y => Copy
u => undo
yy => yank the current line, including the newline character at the end of the line
v => select characters
<C-v> => to select whole lines

#### Paste
p => paste after the cursor, gp, Normal mode
<S-P> => paste after the cursor, g<S-P>, Normal mode

<C-f> => paste en command line

The contents of a register can be pasted while in insert mode: type Ctrl-r then a character that identifies the register. 
For example, Ctrl-r then " pastes from the default register, and Ctrl-r then 0 pastes from register zero which holds the 
text that was most recently yanked (copied)

x => delete the char under cursor
":help"



### Buffer
:e "name" => abre un buffer 
:bp => cambia al previo buffer 
:bn=> cambia al next buffer
:Buffers, :bprev, :bnext


### File managements
vim . 
:e + "name file" => open file
:Explore o :E o :Ex=> Explorar
SHIFT + D , y => Para borrar archivos 
CTRL + O => Para volver a la pantalla anterior
/ => dentro de explorer, podemos buscar archivos con la barra espaciadora
:Vex => Explorador vertical
:Sex => Explorador horizontal

:grep
:copen
:cprev
:h

#### Shortcuts vimrc
,ds => Abrir carpeta data scientist

### Navegar entre pantallas
CTRL + ww cambia de pantallas
CTRL + H o J o K o L => para moverse entre pantallas
:vsplit "name" => divide la pantalla en 2 en forma vertical
:vs => al mismo archivo en 2 pantallas
:split "name" => divide la pantalla en 2 en forma horizontal



## Visual Mode
Press v to enter visual mode, this will also mark a starting selection point
Move the cursor to the desired end selection point; vim will provide a visual highlight of the text selection

V to enter visual line mode, this will make text selections by line
<C-V> o <v> to enter visual block mode, this will make text selections by blocks; moving the cursor will make rectangle selections of the text

apretar v, para seleccionar el tipo de selecion moviendo con "hjkl".
Press v to select characters, or uppercase V to select whole lines, or Ctrl-v to select rectangular blocks 

- Press d to cut.
- Press y to copy.
- Move to where you would like to paste.
- Press P to paste before the cursor
- p to paste after.

The visual mode actually has multiple subtypes: visual, block-visual and linewise-visual

- visual: like described above. Enter by pressing v
- block-visual: select any rectangular region. Enter by pressing <ctrl>+v
- linewise-visual: always select full lines. Enter by pressing <shift>+v
    
## Command Mode

To enter command mode type ’:’ from normal mode and then type your command which should appear at the bottom of the window.

- : Enters command mode
- % Means across all lines
- s Means substitute
- /foo is regex to find things to replace
- /bar/ is regex to replace things with
- /g means global, otherwise it would only execute once per line
  
For example, to do a global find and replace type :%s/foo/bar/g to replace all ‘foo’ with ‘bar’

Vim has a number of other methods that you can read about in the help documentation, :h or :help.


## Replace Mode

Replace mode allows you replace existing text by directly typing over it. Before entering this mode, 
get into normal mode and put your cursor on top of the first character that you want to replace. 
Then press ‘R’ (capital R) to enter replace mode. Now whatever you type will replace the existing text. 
The cursor automatically moves to the next character just like in insert mode. The only difference is that every character you type will replace the existing one.
